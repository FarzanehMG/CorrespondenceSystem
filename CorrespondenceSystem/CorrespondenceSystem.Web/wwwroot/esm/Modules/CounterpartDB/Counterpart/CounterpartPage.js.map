{
  "version": 3,
  "sources": ["../../../../../Modules/CounterpartDB/Counterpart/CounterpartPage.ts", "../../../../../Modules/ServerTypes/CounterpartDB/CounterpartColumns.ts", "../../../../../Modules/ServerTypes/CounterpartDB/CounterpartForm.ts", "../../../../../Modules/ServerTypes/CounterpartDB/CounterpartRow.ts", "../../../../../Modules/ServerTypes/CounterpartDB/CounterpartService.ts", "../../../../../Modules/CounterpartDB/Counterpart/CounterpartGrid.ts", "../../../../../Modules/CounterpartDB/Counterpart/CounterpartDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib';\r\nimport { CounterpartGrid } from './CounterpartGrid';\r\n\r\nexport default function pageInit() {\n    initFullHeightGridPage(new CounterpartGrid($('#GridDiv')).element);\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { CounterpartRow } from \"./CounterpartRow\";\n\nexport interface CounterpartColumns {\n    Id: Column<CounterpartRow>;\n    LetterIdentifier: Column<CounterpartRow>;\n    ReciverName: Column<CounterpartRow>;\n    CopyType: Column<CounterpartRow>;\n    CreatedDate: Column<CounterpartRow>;\n    CreatorUserName: Column<CounterpartRow>;\n    ModifiedDate: Column<CounterpartRow>;\n    ModifiedUserName: Column<CounterpartRow>;\n}\n\nexport class CounterpartColumns extends ColumnsBase<CounterpartRow> {\n    static readonly columnsKey = 'CounterpartDB.Counterpart';\n    static readonly Fields = fieldsProxy<CounterpartColumns>();\n}", "\uFEFFimport { ServiceLookupEditor, IntegerEditor, DateEditor, StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface CounterpartForm {\n    LetterId: ServiceLookupEditor;\n    ReciverId: ServiceLookupEditor;\n    CopyType: IntegerEditor;\n    CreatedDate: DateEditor;\n    CreatorUserName: StringEditor;\n    ModifiedDate: DateEditor;\n    ModifiedUserName: StringEditor;\n}\n\nexport class CounterpartForm extends PrefixedContext {\n    static readonly formKey = 'CounterpartDB.Counterpart';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CounterpartForm.init)  {\n            CounterpartForm.init = true;\n\n            var w0 = ServiceLookupEditor;\n            var w1 = IntegerEditor;\n            var w2 = DateEditor;\n            var w3 = StringEditor;\n\n            initFormType(CounterpartForm, [\n                'LetterId', w0,\n                'ReciverId', w0,\n                'CopyType', w1,\n                'CreatedDate', w2,\n                'CreatorUserName', w3,\n                'ModifiedDate', w2,\n                'ModifiedUserName', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CounterpartRow {\n    Id?: string;\n    LetterId?: string;\n    ReciverId?: string;\n    CopyType?: number;\n    CreatedDate?: string;\n    CreatorUserName?: string;\n    ModifiedDate?: string;\n    ModifiedUserName?: string;\n    LetterIdentifier?: string;\n    ReciverName?: string;\n}\n\nexport abstract class CounterpartRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'CreatorUserName';\n    static readonly localTextPrefix = 'CounterpartDB.Counterpart';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<CounterpartRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { CounterpartRow } from \"./CounterpartRow\";\n\nexport namespace CounterpartService {\n    export const baseUrl = 'CounterpartDB/Counterpart';\n\n    export declare function Create(request: SaveRequest<CounterpartRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CounterpartRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CounterpartRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CounterpartRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"CounterpartDB/Counterpart/Create\",\n        Update: \"CounterpartDB/Counterpart/Update\",\n        Delete: \"CounterpartDB/Counterpart/Delete\",\n        Retrieve: \"CounterpartDB/Counterpart/Retrieve\",\n        List: \"CounterpartDB/Counterpart/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CounterpartService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { CounterpartColumns, CounterpartRow, CounterpartService } from '@/ServerTypes/CounterpartDB';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { CounterpartDialog } from './CounterpartDialog';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.CounterpartDB.CounterpartGrid')\nexport class CounterpartGrid extends EntityGrid<CounterpartRow, any> {\n    protected getColumnsKey() { return CounterpartColumns.columnsKey; }\n    protected getDialogType() { return CounterpartDialog; }\n    protected getRowDefinition() { return CounterpartRow; }\n    protected getService() { return CounterpartService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n}", "\uFEFFimport { CounterpartForm, CounterpartRow, CounterpartService } from '@/ServerTypes/CounterpartDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.CounterpartDB.CounterpartDialog')\nexport class CounterpartDialog extends EntityDialog<CounterpartRow, any> {\n    protected getFormKey() { return CounterpartForm.formKey; }\n    protected getRowDefinition() { return CounterpartRow; }\n    protected getService() { return CounterpartService.baseUrl; }\n\n    protected form = new CounterpartForm(this.idPrefix);\n}"],
  "mappings": "4EAAC,IAAAA,EAAuC,SCAvC,IAAAC,EAAyC,SAenC,IAAMC,EAAN,MAAMA,UAA2B,aAA4B,CAGpE,EAHoEC,EAAAD,EAAA,sBAAvDA,EACO,WAAa,4BADpBA,EAEO,UAAS,eAAgC,EAFtD,IAAME,EAANF,ECfN,IAAAG,EAA4G,SAYtG,IAAMC,EAAN,MAAMA,UAAwB,iBAAgB,CAIjD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAgB,KAAO,CACxBA,EAAgB,KAAO,GAEvB,IAAIE,EAAK,sBACLC,EAAK,gBACLC,EAAK,aACLC,EAAK,kBAET,gBAAaL,EAAiB,CAC1B,WAAYE,EACZ,YAAaA,EACb,WAAYC,EACZ,cAAeC,EACf,kBAAmBC,EACnB,eAAgBD,EAChB,mBAAoBC,CACxB,CAAC,CACL,CACJ,CACJ,EA1BqDC,EAAAN,EAAA,mBAAxCA,EACO,QAAU,4BADvB,IAAMO,EAANP,ECZN,IAAAQ,EAA4B,SAetB,IAAeC,EAAf,MAAeA,CAAe,CAUrC,EAVqCC,EAAAD,EAAA,kBAAfA,EACF,WAAa,KADXA,EAEF,aAAe,kBAFbA,EAGF,gBAAkB,4BAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAA4B,EATlD,IAAeE,EAAfF,ECfN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,4BAQVA,EAAA,QAAU,CACnB,OAAQ,mCACR,OAAQ,mCACR,OAAQ,mCACR,SAAU,qCACV,KAAM,gCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAoBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC9C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SAGlC,IAAMC,EAAN,cAAgC,cAAkC,CAAlE,kCAKH,KAAU,KAAO,IAAIC,EAAgB,KAAK,QAAQ,EAJxC,YAAa,CAAE,OAAOA,EAAgB,OAAS,CAC/C,kBAAmB,CAAE,OAAOC,CAAgB,CAC5C,YAAa,CAAE,OAAOC,EAAmB,OAAS,CAGhE,EANyEC,EAAAJ,EAAA,qBAA5DA,EAANK,EAAA,CADN,aAAW,cAAc,sDAAsD,GACnEL,GDCN,IAAMM,EAAN,cAA8B,YAAgC,CACvD,eAAgB,CAAE,OAAOC,EAAmB,UAAY,CACxD,eAAgB,CAAE,OAAOC,CAAmB,CAC5C,kBAAmB,CAAE,OAAOC,CAAgB,CAC5C,YAAa,CAAE,OAAOC,EAAmB,OAAS,CAE5D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EATqEC,EAAAN,EAAA,mBAAxDA,EAANO,EAAA,CADN,aAAW,cAAc,oDAAoD,GACjEP,GLFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAgB,EAAE,UAAU,CAAC,EAAE,OAAO,CACrE,CAFwBC,EAAAF,EAAA",
  "names": ["import_corelib", "import_corelib", "_CounterpartColumns", "__name", "CounterpartColumns", "import_corelib", "_CounterpartForm", "prefix", "w0", "w1", "w2", "w3", "__name", "CounterpartForm", "import_corelib", "_CounterpartRow", "__name", "CounterpartRow", "import_corelib", "CounterpartService", "x", "r", "s", "o", "import_corelib", "import_corelib", "CounterpartDialog", "CounterpartForm", "CounterpartRow", "CounterpartService", "__name", "__decorateClass", "CounterpartGrid", "CounterpartColumns", "CounterpartDialog", "CounterpartRow", "CounterpartService", "container", "__name", "__decorateClass", "pageInit", "CounterpartGrid", "__name"]
}
