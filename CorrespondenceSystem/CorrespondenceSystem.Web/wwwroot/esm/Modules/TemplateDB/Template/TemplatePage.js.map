{
  "version": 3,
  "sources": ["../../../../../Modules/TemplateDB/Template/TemplatePage.ts", "../../../../../Modules/ServerTypes/TemplateDB/TemplateColumns.ts", "../../../../../Modules/ServerTypes/TemplateDB/TemplateForm.ts", "../../../../../Modules/ServerTypes/TemplateDB/TemplateRow.ts", "../../../../../Modules/ServerTypes/TemplateDB/TemplateService.ts", "../../../../../Modules/TemplateDB/Template/TemplateGrid.ts", "../../../../../Modules/TemplateDB/Template/TemplateDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib';\r\nimport { TemplateGrid } from './TemplateGrid';\r\n\r\nexport default function pageInit() {\n    initFullHeightGridPage(new TemplateGrid($('#GridDiv')).element);\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { TemplateRow } from \"./TemplateRow\";\r\n\r\nexport interface TemplateColumns {\r\n    Id: Column<TemplateRow>;\r\n    Title: Column<TemplateRow>;\r\n    TemplateFile: Column<TemplateRow>;\r\n    IsDefault: Column<TemplateRow>;\r\n    CreatedDate: Column<TemplateRow>;\r\n    CreatorUserName: Column<TemplateRow>;\r\n    ModifiedDate: Column<TemplateRow>;\r\n    ModifiedUserName: Column<TemplateRow>;\r\n}\r\n\r\nexport class TemplateColumns extends ColumnsBase<TemplateRow> {\r\n    static readonly columnsKey = 'TemplateDB.Template';\r\n    static readonly Fields = fieldsProxy<TemplateColumns>();\r\n}", "\uFEFFimport { StringEditor, BooleanEditor, DateEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface TemplateForm {\r\n    Title: StringEditor;\r\n    TemplateFile: StringEditor;\r\n    IsDefault: BooleanEditor;\r\n    CreatedDate: DateEditor;\r\n    CreatorUserName: StringEditor;\r\n    ModifiedDate: DateEditor;\r\n    ModifiedUserName: StringEditor;\r\n}\r\n\r\nexport class TemplateForm extends PrefixedContext {\r\n    static readonly formKey = 'TemplateDB.Template';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!TemplateForm.init)  {\r\n            TemplateForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n            var w1 = BooleanEditor;\r\n            var w2 = DateEditor;\r\n\r\n            initFormType(TemplateForm, [\r\n                'Title', w0,\r\n                'TemplateFile', w0,\r\n                'IsDefault', w1,\r\n                'CreatedDate', w2,\r\n                'CreatorUserName', w0,\r\n                'ModifiedDate', w2,\r\n                'ModifiedUserName', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface TemplateRow {\n    Id?: string;\n    Title?: string;\n    TemplateFile?: string;\n    IsDefault?: boolean;\n    CreatedDate?: string;\n    CreatorUserName?: string;\n    ModifiedDate?: string;\n    ModifiedUserName?: string;\n    IsActive?: number;\n}\n\nexport abstract class TemplateRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Title';\n    static readonly localTextPrefix = 'TemplateDB.Template';\n    static readonly lookupKey = 'TemplateDB.Template';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<TemplateRow>('TemplateDB.Template') }\n    static async getLookupAsync() { return getLookupAsync<TemplateRow>('TemplateDB.Template') }\n\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<TemplateRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { TemplateRow } from \"./TemplateRow\";\r\n\r\nexport namespace TemplateService {\r\n    export const baseUrl = 'TemplateDB/Template';\r\n\r\n    export declare function Create(request: SaveRequest<TemplateRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<TemplateRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TemplateRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TemplateRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"TemplateDB/Template/Create\",\r\n        Update: \"TemplateDB/Template/Update\",\r\n        Delete: \"TemplateDB/Template/Delete\",\r\n        Retrieve: \"TemplateDB/Template/Retrieve\",\r\n        List: \"TemplateDB/Template/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>TemplateService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { TemplateColumns, TemplateRow, TemplateService } from '@/ServerTypes/TemplateDB';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { TemplateDialog } from './TemplateDialog';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.TemplateDB.TemplateGrid')\nexport class TemplateGrid extends EntityGrid<TemplateRow, any> {\n    protected getColumnsKey() { return TemplateColumns.columnsKey; }\n    protected getDialogType() { return TemplateDialog; }\n    protected getRowDefinition() { return TemplateRow; }\n    protected getService() { return TemplateService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n}", "\uFEFFimport { TemplateForm, TemplateRow, TemplateService } from '@/ServerTypes/TemplateDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.TemplateDB.TemplateDialog')\nexport class TemplateDialog extends EntityDialog<TemplateRow, any> {\n    protected getFormKey() { return TemplateForm.formKey; }\n    protected getRowDefinition() { return TemplateRow; }\n    protected getService() { return TemplateService.baseUrl; }\n\n    protected form = new TemplateForm(this.idPrefix);\n}"],
  "mappings": "mFAAC,IAAAA,EAAuC,SCAvC,IAAAC,EAAyC,SAenC,IAAMC,EAAN,MAAMA,UAAwB,aAAyB,CAG9D,EAH8DC,EAAAD,EAAA,mBAAjDA,EACO,WAAa,sBADpBA,EAEO,UAAS,eAA6B,EAFnD,IAAME,EAANF,ECfN,IAAAG,EAAuF,SAYjF,IAAMC,EAAN,MAAMA,UAAqB,iBAAgB,CAI9C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAa,KAAO,CACrBA,EAAa,KAAO,GAEpB,IAAIE,EAAK,eACLC,EAAK,gBACLC,EAAK,gBAET,gBAAaJ,EAAc,CACvB,QAASE,EACT,eAAgBA,EAChB,YAAaC,EACb,cAAeC,EACf,kBAAmBF,EACnB,eAAgBE,EAChB,mBAAoBF,CACxB,CAAC,CACL,CACJ,CACJ,EAzBkDG,EAAAL,EAAA,gBAArCA,EACO,QAAU,sBADvB,IAAMM,EAANN,ECZN,IAAAO,EAAuD,SAcjD,IAAeC,EAAf,MAAeA,CAAY,CAQ9B,OAAO,WAAY,CAAE,SAAO,aAAuB,qBAAqB,CAAE,CAC1E,OAAa,gBAAiB,QAAAC,EAAA,sBAAE,SAAO,kBAA4B,qBAAqB,CAAE,GAQ9F,EAjBkCC,EAAAF,EAAA,eAAZA,EACF,WAAa,KADXA,EAEF,iBAAmB,WAFjBA,EAGF,aAAe,QAHbA,EAIF,gBAAkB,sBAJhBA,EAKF,UAAY,sBALVA,EAWF,iBAAmB,yBAXjBA,EAYF,iBAAmB,yBAZjBA,EAaF,eAAiB,yBAbfA,EAcF,iBAAmB,yBAdjBA,EAgBF,UAAS,eAAyB,EAhB/C,IAAeG,EAAfH,ECdN,IAAAI,EAAuK,SAGvJC,OACAA,EAAA,QAAU,sBAQVA,EAAA,QAAU,CACnB,OAAQ,6BACR,OAAQ,6BACR,OAAQ,6BACR,SAAU,+BACV,KAAM,0BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAiBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC3C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SAGlC,IAAMC,EAAN,cAA6B,cAA+B,CAA5D,kCAKH,KAAU,KAAO,IAAIC,EAAa,KAAK,QAAQ,EAJrC,YAAa,CAAE,OAAOA,EAAa,OAAS,CAC5C,kBAAmB,CAAE,OAAOC,CAAa,CACzC,YAAa,CAAE,OAAOC,EAAgB,OAAS,CAG7D,EANmEC,EAAAJ,EAAA,kBAAtDA,EAANK,EAAA,CADN,aAAW,cAAc,gDAAgD,GAC7DL,GDCN,IAAMM,EAAN,cAA2B,YAA6B,CACjD,eAAgB,CAAE,OAAOC,EAAgB,UAAY,CACrD,eAAgB,CAAE,OAAOC,CAAgB,CACzC,kBAAmB,CAAE,OAAOC,CAAa,CACzC,YAAa,CAAE,OAAOC,EAAgB,OAAS,CAEzD,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EAT+DC,EAAAN,EAAA,gBAAlDA,EAANO,EAAA,CADN,aAAW,cAAc,8CAA8C,GAC3DP,GLFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAa,EAAE,UAAU,CAAC,EAAE,OAAO,CAClE,CAFwBC,EAAAF,EAAA",
  "names": ["import_corelib", "import_corelib", "_TemplateColumns", "__name", "TemplateColumns", "import_corelib", "_TemplateForm", "prefix", "w0", "w1", "w2", "__name", "TemplateForm", "import_corelib", "_TemplateRow", "__async", "__name", "TemplateRow", "import_corelib", "TemplateService", "x", "r", "s", "o", "import_corelib", "import_corelib", "TemplateDialog", "TemplateForm", "TemplateRow", "TemplateService", "__name", "__decorateClass", "TemplateGrid", "TemplateColumns", "TemplateDialog", "TemplateRow", "TemplateService", "container", "__name", "__decorateClass", "pageInit", "TemplateGrid", "__name"]
}
