{
  "version": 3,
  "sources": ["../../../../../Modules/LetterHistoryDB/LetterHistory/LetterHistoryPage.ts", "../../../../../Modules/ServerTypes/LetterHistoryDB/LetterHistoryColumns.ts", "../../../../../Modules/ServerTypes/LetterHistoryDB/LetterHistoryForm.ts", "../../../../../Modules/ServerTypes/LetterHistoryDB/LetterHistoryRow.ts", "../../../../../Modules/ServerTypes/LetterHistoryDB/LetterHistoryService.ts", "../../../../../Modules/LetterHistoryDB/LetterHistory/LetterHistoryGrid.ts", "../../../../../Modules/LetterHistoryDB/LetterHistory/LetterHistoryDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib';\r\nimport { LetterHistoryGrid } from './LetterHistoryGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new LetterHistoryGrid($('#GridDiv')).element);\r\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { LetterHistoryRow } from \"./LetterHistoryRow\";\r\n\r\nexport interface LetterHistoryColumns {\r\n    Id: Column<LetterHistoryRow>;\r\n    LetterLetterIdentifier: Column<LetterHistoryRow>;\r\n    ActionType: Column<LetterHistoryRow>;\r\n    TemplateId: Column<LetterHistoryRow>;\r\n    ReceiverId: Column<LetterHistoryRow>;\r\n    SenderId: Column<LetterHistoryRow>;\r\n    GrandSubjectId: Column<LetterHistoryRow>;\r\n    LetterIdentifier: Column<LetterHistoryRow>;\r\n    LetterIdentifierGen: Column<LetterHistoryRow>;\r\n    LetterNo: Column<LetterHistoryRow>;\r\n    Title: Column<LetterHistoryRow>;\r\n    LetterContent: Column<LetterHistoryRow>;\r\n    Tag: Column<LetterHistoryRow>;\r\n    LetterType: Column<LetterHistoryRow>;\r\n    State: Column<LetterHistoryRow>;\r\n    PriorityState: Column<LetterHistoryRow>;\r\n    HasAttachment: Column<LetterHistoryRow>;\r\n    CreatedDate: Column<LetterHistoryRow>;\r\n    CreatorUserName: Column<LetterHistoryRow>;\r\n    ModifiedDate: Column<LetterHistoryRow>;\r\n    ModifiedUserName: Column<LetterHistoryRow>;\r\n    LetterCarrier: Column<LetterHistoryRow>;\r\n}\r\n\r\nexport class LetterHistoryColumns extends ColumnsBase<LetterHistoryRow> {\r\n    static readonly columnsKey = 'LetterHistoryDB.LetterHistory';\r\n    static readonly Fields = fieldsProxy<LetterHistoryColumns>();\r\n}", "\uFEFFimport { ServiceLookupEditor, IntegerEditor, StringEditor, BooleanEditor, DateEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface LetterHistoryForm {\r\n    LetterId: ServiceLookupEditor;\r\n    ActionType: IntegerEditor;\r\n    TemplateId: StringEditor;\r\n    ReceiverId: StringEditor;\r\n    SenderId: StringEditor;\r\n    GrandSubjectId: StringEditor;\r\n    LetterIdentifier: StringEditor;\r\n    LetterIdentifierGen: StringEditor;\r\n    LetterNo: StringEditor;\r\n    Title: StringEditor;\r\n    LetterContent: StringEditor;\r\n    Tag: StringEditor;\r\n    LetterType: IntegerEditor;\r\n    State: IntegerEditor;\r\n    PriorityState: IntegerEditor;\r\n    HasAttachment: BooleanEditor;\r\n    CreatedDate: DateEditor;\r\n    CreatorUserName: StringEditor;\r\n    ModifiedDate: DateEditor;\r\n    ModifiedUserName: DateEditor;\r\n    LetterCarrier: StringEditor;\r\n}\r\n\r\nexport class LetterHistoryForm extends PrefixedContext {\r\n    static readonly formKey = 'LetterHistoryDB.LetterHistory';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!LetterHistoryForm.init)  {\r\n            LetterHistoryForm.init = true;\r\n\r\n            var w0 = ServiceLookupEditor;\r\n            var w1 = IntegerEditor;\r\n            var w2 = StringEditor;\r\n            var w3 = BooleanEditor;\r\n            var w4 = DateEditor;\r\n\r\n            initFormType(LetterHistoryForm, [\r\n                'LetterId', w0,\r\n                'ActionType', w1,\r\n                'TemplateId', w2,\r\n                'ReceiverId', w2,\r\n                'SenderId', w2,\r\n                'GrandSubjectId', w2,\r\n                'LetterIdentifier', w2,\r\n                'LetterIdentifierGen', w2,\r\n                'LetterNo', w2,\r\n                'Title', w2,\r\n                'LetterContent', w2,\r\n                'Tag', w2,\r\n                'LetterType', w1,\r\n                'State', w1,\r\n                'PriorityState', w1,\r\n                'HasAttachment', w3,\r\n                'CreatedDate', w4,\r\n                'CreatorUserName', w2,\r\n                'ModifiedDate', w4,\r\n                'ModifiedUserName', w4,\r\n                'LetterCarrier', w2\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface LetterHistoryRow {\r\n    Id?: string;\r\n    LetterId?: string;\r\n    ActionType?: number;\r\n    TemplateId?: string;\r\n    ReceiverId?: string;\r\n    SenderId?: string;\r\n    GrandSubjectId?: string;\r\n    LetterIdentifier?: string;\r\n    LetterIdentifierGen?: string;\r\n    LetterNo?: string;\r\n    Title?: string;\r\n    LetterContent?: string;\r\n    Tag?: string;\r\n    LetterType?: number;\r\n    State?: number;\r\n    PriorityState?: number;\r\n    HasAttachment?: boolean;\r\n    CreatedDate?: string;\r\n    CreatorUserName?: string;\r\n    ModifiedDate?: string;\r\n    ModifiedUserName?: string;\r\n    LetterCarrier?: string;\r\n    IsActive?: number;\r\n    LetterLetterIdentifier?: string;\r\n}\r\n\r\nexport abstract class LetterHistoryRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'LetterIdentifier';\r\n    static readonly localTextPrefix = 'LetterHistoryDB.LetterHistory';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<LetterHistoryRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { LetterHistoryRow } from \"./LetterHistoryRow\";\r\n\r\nexport namespace LetterHistoryService {\r\n    export const baseUrl = 'LetterHistoryDB/LetterHistory';\r\n\r\n    export declare function Create(request: SaveRequest<LetterHistoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<LetterHistoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<LetterHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<LetterHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"LetterHistoryDB/LetterHistory/Create\",\r\n        Update: \"LetterHistoryDB/LetterHistory/Update\",\r\n        Delete: \"LetterHistoryDB/LetterHistory/Delete\",\r\n        Retrieve: \"LetterHistoryDB/LetterHistory/Retrieve\",\r\n        List: \"LetterHistoryDB/LetterHistory/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>LetterHistoryService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { LetterHistoryColumns, LetterHistoryRow, LetterHistoryService } from '@/ServerTypes/LetterHistoryDB';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { LetterHistoryDialog } from './LetterHistoryDialog';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.LetterHistoryDB.LetterHistoryGrid')\r\nexport class LetterHistoryGrid extends EntityGrid<LetterHistoryRow, any> {\r\n    protected getColumnsKey() { return LetterHistoryColumns.columnsKey; }\r\n    protected getDialogType() { return LetterHistoryDialog; }\r\n    protected getRowDefinition() { return LetterHistoryRow; }\r\n    protected getService() { return LetterHistoryService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n}", "\uFEFFimport { LetterHistoryForm, LetterHistoryRow, LetterHistoryService } from '@/ServerTypes/LetterHistoryDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.LetterHistoryDB.LetterHistoryDialog')\r\nexport class LetterHistoryDialog extends EntityDialog<LetterHistoryRow, any> {\r\n    protected getFormKey() { return LetterHistoryForm.formKey; }\r\n    protected getRowDefinition() { return LetterHistoryRow; }\r\n    protected getService() { return LetterHistoryService.baseUrl; }\r\n\r\n    protected form = new LetterHistoryForm(this.idPrefix);\r\n}"],
  "mappings": "4EAAC,IAAAA,EAAuC,SCAvC,IAAAC,EAAyC,SA6BnC,IAAMC,EAAN,MAAMA,UAA6B,aAA8B,CAGxE,EAHwEC,EAAAD,EAAA,wBAA3DA,EACO,WAAa,gCADpBA,EAEO,UAAS,eAAkC,EAFxD,IAAME,EAANF,EC7BN,IAAAG,EAA2H,SA0BrH,IAAMC,EAAN,MAAMA,UAA0B,iBAAgB,CAInD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAkB,KAAO,CAC1BA,EAAkB,KAAO,GAEzB,IAAIE,EAAK,sBACLC,EAAK,gBACLC,EAAK,eACLC,EAAK,gBACLC,EAAK,gBAET,gBAAaN,EAAmB,CAC5B,WAAYE,EACZ,aAAcC,EACd,aAAcC,EACd,aAAcA,EACd,WAAYA,EACZ,iBAAkBA,EAClB,mBAAoBA,EACpB,sBAAuBA,EACvB,WAAYA,EACZ,QAASA,EACT,gBAAiBA,EACjB,MAAOA,EACP,aAAcD,EACd,QAASA,EACT,gBAAiBA,EACjB,gBAAiBE,EACjB,cAAeC,EACf,kBAAmBF,EACnB,eAAgBE,EAChB,mBAAoBA,EACpB,gBAAiBF,CACrB,CAAC,CACL,CACJ,CACJ,EAzCuDG,EAAAP,EAAA,qBAA1CA,EACO,QAAU,gCADvB,IAAMQ,EAANR,EC1BN,IAAAS,EAA4B,SA6BtB,IAAeC,EAAf,MAAeA,CAAiB,CAWvC,EAXuCC,EAAAD,EAAA,oBAAjBA,EACF,WAAa,KADXA,EAEF,iBAAmB,WAFjBA,EAGF,aAAe,mBAHbA,EAIF,gBAAkB,gCAJhBA,EAKF,iBAAmB,yBALjBA,EAMF,iBAAmB,yBANjBA,EAOF,eAAiB,yBAPfA,EAQF,iBAAmB,yBARjBA,EAUF,UAAS,eAA8B,EAVpD,IAAeE,EAAfF,EC7BN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gCAQVA,EAAA,QAAU,CACnB,OAAQ,uCACR,OAAQ,uCACR,OAAQ,uCACR,SAAU,yCACV,KAAM,oCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAsBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAChD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SAGlC,IAAMC,EAAN,cAAkC,cAAoC,CAAtE,kCAKH,KAAU,KAAO,IAAIC,EAAkB,KAAK,QAAQ,EAJ1C,YAAa,CAAE,OAAOA,EAAkB,OAAS,CACjD,kBAAmB,CAAE,OAAOC,CAAkB,CAC9C,YAAa,CAAE,OAAOC,EAAqB,OAAS,CAGlE,EAN6EC,EAAAJ,EAAA,uBAAhEA,EAANK,EAAA,CADN,aAAW,cAAc,0DAA0D,GACvEL,GDCN,IAAMM,EAAN,cAAgC,YAAkC,CAC3D,eAAgB,CAAE,OAAOC,EAAqB,UAAY,CAC1D,eAAgB,CAAE,OAAOC,CAAqB,CAC9C,kBAAmB,CAAE,OAAOC,CAAkB,CAC9C,YAAa,CAAE,OAAOC,EAAqB,OAAS,CAE9D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EATyEC,EAAAN,EAAA,qBAA5DA,EAANO,EAAA,CADN,aAAW,cAAc,wDAAwD,GACrEP,GLFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAkB,EAAE,UAAU,CAAC,EAAE,OAAO,CACvE,CAFwBC,EAAAF,EAAA",
  "names": ["import_corelib", "import_corelib", "_LetterHistoryColumns", "__name", "LetterHistoryColumns", "import_corelib", "_LetterHistoryForm", "prefix", "w0", "w1", "w2", "w3", "w4", "__name", "LetterHistoryForm", "import_corelib", "_LetterHistoryRow", "__name", "LetterHistoryRow", "import_corelib", "LetterHistoryService", "x", "r", "s", "o", "import_corelib", "import_corelib", "LetterHistoryDialog", "LetterHistoryForm", "LetterHistoryRow", "LetterHistoryService", "__name", "__decorateClass", "LetterHistoryGrid", "LetterHistoryColumns", "LetterHistoryDialog", "LetterHistoryRow", "LetterHistoryService", "container", "__name", "__decorateClass", "pageInit", "LetterHistoryGrid", "__name"]
}
