namespace Vision.UniversityStudy {
    @Serenity.Decorators.registerClass()
    export class StudentGrid extends StudentGridBase {
        //criteria: any[];

        constructor(container: JQuery) {
            super(container);
            //var request = this.view.params as Serenity.ListRequest;
            //this.criteria = request.Criteria;
        }


        protected getButtons(): Serenity.ToolButton[] {
            let buttons = super.getButtons();



            buttons.push({
                title: "فیلتر کردن",

                onClick: () => {
                    this.checkValues()
                },
                icon: "fa-filter"
            })

            return buttons;
        }

        //protected onViewSubmit() {
        //    if (!super.onViewSubmit()) {
        //        return false;
        //    }


        //    var request = this.view.params as Serenity.ListRequest;

        //    request.Criteria = Serenity.Criteria.and(request.Criteria,
        //        [[StudentRow.Fields.Average], ">=", "12"]);

        //    return true;
        //}

        protected getQuickFilters(): Serenity.QuickFilter<Serenity.Widget<any>, any>[] {
            let filters = super.getQuickFilters();

            filters.push({
                field: StudentRow.Fields.Average,
                type: Serenity.BooleanEditor,
                title: "فیلتر معدل های بیشتر از 12",
                handler: h => {
                    h.active = h.value;

                    if (h.active) {
                        h.request.Criteria = Serenity.Criteria.and(h.request.Criteria,
                            [[StudentRow.Fields.Average], ">=", "12"]);
                    }
                    //else {
                    //    h.request.Criteria = Serenity.Criteria.and(h.request.Criteria,
                    //        [[StudentRow.Fields.Average], "<=", "12"]);
                    //}
                }
            })

            return filters;
        }

        refreshIfNeeded() {
            return super.refreshIfNeeded();
        }
        checkValues() {
            Q.serviceCall({
                url: Q.resolveUrl("~/Services/UniversityStudy/Student/UpperScores"),
                async: false,
                request: {
                    StudentsScores: "12"
                },
                onSuccess: response => {
                    Q.log(response);
                }
            })
        }



        //protected getColumns() {
        //    var col = super.itemAt(0);
        //    var cols = super.getColumns();

        //    var name = col.FirstName;
        //    var last = col.LastName;

        //    var sum = name + " " + last;
        //    alert(col);

        //    return cols;
        //}

        getColumns() {
            var cols = super.getColumns();

            cols.push({
                field: "Name+Fmily",
            })

            return cols;
        }


    }
}