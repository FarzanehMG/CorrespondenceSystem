{
  "version": 3,
  "sources": ["../../../../../Modules/LetterHistoryDB/LetterHistory/LetterHistoryPage.ts", "../../../../../Modules/ServerTypes/LetterHistoryDB/LetterHistoryColumns.ts", "../../../../../Modules/ServerTypes/LetterHistoryDB/LetterHistoryForm.ts", "../../../../../Modules/ServerTypes/LetterHistoryDB/LetterHistoryRow.ts", "../../../../../Modules/ServerTypes/LetterHistoryDB/LetterHistoryService.ts", "../../../../../Modules/LetterHistoryDB/LetterHistory/LetterHistoryGrid.ts", "../../../../../Modules/LetterHistoryDB/LetterHistory/LetterHistoryDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib';\r\nimport { LetterHistoryGrid } from './LetterHistoryGrid';\r\n\r\nexport default function pageInit() {\n    initFullHeightGridPage(new LetterHistoryGrid($('#GridDiv')).element);\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { LetterHistoryRow } from \"./LetterHistoryRow\";\n\nexport interface LetterHistoryColumns {\n    Id: Column<LetterHistoryRow>;\n    LetterLetterIdentifier: Column<LetterHistoryRow>;\n    ActionType: Column<LetterHistoryRow>;\n    TemplateId: Column<LetterHistoryRow>;\n    ReceiverId: Column<LetterHistoryRow>;\n    SenderId: Column<LetterHistoryRow>;\n    GrandSubjectId: Column<LetterHistoryRow>;\n    LetterIdentifier: Column<LetterHistoryRow>;\n    LetterIdentifierGen: Column<LetterHistoryRow>;\n    LetterNo: Column<LetterHistoryRow>;\n    Title: Column<LetterHistoryRow>;\n    LetterContent: Column<LetterHistoryRow>;\n    Tag: Column<LetterHistoryRow>;\n    LetterType: Column<LetterHistoryRow>;\n    State: Column<LetterHistoryRow>;\n    PriorityState: Column<LetterHistoryRow>;\n    HasAttachment: Column<LetterHistoryRow>;\n    CreatedDate: Column<LetterHistoryRow>;\n    CreatorUserName: Column<LetterHistoryRow>;\n    ModifiedDate: Column<LetterHistoryRow>;\n    ModifiedUserName: Column<LetterHistoryRow>;\n    LetterCarrier: Column<LetterHistoryRow>;\n}\n\nexport class LetterHistoryColumns extends ColumnsBase<LetterHistoryRow> {\n    static readonly columnsKey = 'LetterHistoryDB.LetterHistory';\n    static readonly Fields = fieldsProxy<LetterHistoryColumns>();\n}", "\uFEFFimport { ServiceLookupEditor, IntegerEditor, StringEditor, BooleanEditor, DateEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface LetterHistoryForm {\n    LetterId: ServiceLookupEditor;\n    ActionType: IntegerEditor;\n    TemplateId: StringEditor;\n    ReceiverId: StringEditor;\n    SenderId: StringEditor;\n    GrandSubjectId: StringEditor;\n    LetterIdentifier: StringEditor;\n    LetterIdentifierGen: StringEditor;\n    LetterNo: StringEditor;\n    Title: StringEditor;\n    LetterContent: StringEditor;\n    Tag: StringEditor;\n    LetterType: IntegerEditor;\n    State: IntegerEditor;\n    PriorityState: IntegerEditor;\n    HasAttachment: BooleanEditor;\n    CreatedDate: DateEditor;\n    CreatorUserName: StringEditor;\n    ModifiedDate: DateEditor;\n    ModifiedUserName: DateEditor;\n    LetterCarrier: StringEditor;\n}\n\nexport class LetterHistoryForm extends PrefixedContext {\n    static readonly formKey = 'LetterHistoryDB.LetterHistory';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!LetterHistoryForm.init)  {\n            LetterHistoryForm.init = true;\n\n            var w0 = ServiceLookupEditor;\n            var w1 = IntegerEditor;\n            var w2 = StringEditor;\n            var w3 = BooleanEditor;\n            var w4 = DateEditor;\n\n            initFormType(LetterHistoryForm, [\n                'LetterId', w0,\n                'ActionType', w1,\n                'TemplateId', w2,\n                'ReceiverId', w2,\n                'SenderId', w2,\n                'GrandSubjectId', w2,\n                'LetterIdentifier', w2,\n                'LetterIdentifierGen', w2,\n                'LetterNo', w2,\n                'Title', w2,\n                'LetterContent', w2,\n                'Tag', w2,\n                'LetterType', w1,\n                'State', w1,\n                'PriorityState', w1,\n                'HasAttachment', w3,\n                'CreatedDate', w4,\n                'CreatorUserName', w2,\n                'ModifiedDate', w4,\n                'ModifiedUserName', w4,\n                'LetterCarrier', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface LetterHistoryRow {\n    Id?: string;\n    LetterId?: string;\n    ActionType?: number;\n    TemplateId?: string;\n    ReceiverId?: string;\n    SenderId?: string;\n    GrandSubjectId?: string;\n    LetterIdentifier?: string;\n    LetterIdentifierGen?: string;\n    LetterNo?: string;\n    Title?: string;\n    LetterContent?: string;\n    Tag?: string;\n    LetterType?: number;\n    State?: number;\n    PriorityState?: number;\n    HasAttachment?: boolean;\n    CreatedDate?: string;\n    CreatorUserName?: string;\n    ModifiedDate?: string;\n    ModifiedUserName?: string;\n    LetterCarrier?: string;\n    LetterLetterIdentifier?: string;\n}\n\nexport abstract class LetterHistoryRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'LetterIdentifier';\n    static readonly localTextPrefix = 'LetterHistoryDB.LetterHistory';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<LetterHistoryRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { LetterHistoryRow } from \"./LetterHistoryRow\";\n\nexport namespace LetterHistoryService {\n    export const baseUrl = 'LetterHistoryDB/LetterHistory';\n\n    export declare function Create(request: SaveRequest<LetterHistoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<LetterHistoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<LetterHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<LetterHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"LetterHistoryDB/LetterHistory/Create\",\n        Update: \"LetterHistoryDB/LetterHistory/Update\",\n        Delete: \"LetterHistoryDB/LetterHistory/Delete\",\n        Retrieve: \"LetterHistoryDB/LetterHistory/Retrieve\",\n        List: \"LetterHistoryDB/LetterHistory/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>LetterHistoryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { LetterHistoryColumns, LetterHistoryRow, LetterHistoryService } from '@/ServerTypes/LetterHistoryDB';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { LetterHistoryDialog } from './LetterHistoryDialog';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.LetterHistoryDB.LetterHistoryGrid')\nexport class LetterHistoryGrid extends EntityGrid<LetterHistoryRow, any> {\n    protected getColumnsKey() { return LetterHistoryColumns.columnsKey; }\n    protected getDialogType() { return LetterHistoryDialog; }\n    protected getRowDefinition() { return LetterHistoryRow; }\n    protected getService() { return LetterHistoryService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n}", "\uFEFFimport { LetterHistoryForm, LetterHistoryRow, LetterHistoryService } from '@/ServerTypes/LetterHistoryDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.LetterHistoryDB.LetterHistoryDialog')\nexport class LetterHistoryDialog extends EntityDialog<LetterHistoryRow, any> {\n    protected getFormKey() { return LetterHistoryForm.formKey; }\n    protected getRowDefinition() { return LetterHistoryRow; }\n    protected getService() { return LetterHistoryService.baseUrl; }\n\n    protected form = new LetterHistoryForm(this.idPrefix);\n}"],
  "mappings": "4EAAC,IAAAA,EAAuC,SCAvC,IAAAC,EAAyC,SA6BnC,IAAMC,EAAN,MAAMA,UAA6B,aAA8B,CAGxE,EAHwEC,EAAAD,EAAA,wBAA3DA,EACO,WAAa,gCADpBA,EAEO,UAAS,eAAkC,EAFxD,IAAME,EAANF,EC7BN,IAAAG,EAA2H,SA0BrH,IAAMC,EAAN,MAAMA,UAA0B,iBAAgB,CAInD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAkB,KAAO,CAC1BA,EAAkB,KAAO,GAEzB,IAAIE,EAAK,sBACLC,EAAK,gBACLC,EAAK,eACLC,EAAK,gBACLC,EAAK,gBAET,gBAAaN,EAAmB,CAC5B,WAAYE,EACZ,aAAcC,EACd,aAAcC,EACd,aAAcA,EACd,WAAYA,EACZ,iBAAkBA,EAClB,mBAAoBA,EACpB,sBAAuBA,EACvB,WAAYA,EACZ,QAASA,EACT,gBAAiBA,EACjB,MAAOA,EACP,aAAcD,EACd,QAASA,EACT,gBAAiBA,EACjB,gBAAiBE,EACjB,cAAeC,EACf,kBAAmBF,EACnB,eAAgBE,EAChB,mBAAoBA,EACpB,gBAAiBF,CACrB,CAAC,CACL,CACJ,CACJ,EAzCuDG,EAAAP,EAAA,qBAA1CA,EACO,QAAU,gCADvB,IAAMQ,EAANR,EC1BN,IAAAS,EAA4B,SA4BtB,IAAeC,EAAf,MAAeA,CAAiB,CAUvC,EAVuCC,EAAAD,EAAA,oBAAjBA,EACF,WAAa,KADXA,EAEF,aAAe,mBAFbA,EAGF,gBAAkB,gCAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAA8B,EATpD,IAAeE,EAAfF,EC5BN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gCAQVA,EAAA,QAAU,CACnB,OAAQ,uCACR,OAAQ,uCACR,OAAQ,uCACR,SAAU,yCACV,KAAM,oCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAsBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAChD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SAGlC,IAAMC,EAAN,cAAkC,cAAoC,CAAtE,kCAKH,KAAU,KAAO,IAAIC,EAAkB,KAAK,QAAQ,EAJ1C,YAAa,CAAE,OAAOA,EAAkB,OAAS,CACjD,kBAAmB,CAAE,OAAOC,CAAkB,CAC9C,YAAa,CAAE,OAAOC,EAAqB,OAAS,CAGlE,EAN6EC,EAAAJ,EAAA,uBAAhEA,EAANK,EAAA,CADN,aAAW,cAAc,0DAA0D,GACvEL,GDCN,IAAMM,EAAN,cAAgC,YAAkC,CAC3D,eAAgB,CAAE,OAAOC,EAAqB,UAAY,CAC1D,eAAgB,CAAE,OAAOC,CAAqB,CAC9C,kBAAmB,CAAE,OAAOC,CAAkB,CAC9C,YAAa,CAAE,OAAOC,EAAqB,OAAS,CAE9D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EATyEC,EAAAN,EAAA,qBAA5DA,EAANO,EAAA,CADN,aAAW,cAAc,wDAAwD,GACrEP,GLFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAkB,EAAE,UAAU,CAAC,EAAE,OAAO,CACvE,CAFwBC,EAAAF,EAAA",
  "names": ["import_corelib", "import_corelib", "_LetterHistoryColumns", "__name", "LetterHistoryColumns", "import_corelib", "_LetterHistoryForm", "prefix", "w0", "w1", "w2", "w3", "w4", "__name", "LetterHistoryForm", "import_corelib", "_LetterHistoryRow", "__name", "LetterHistoryRow", "import_corelib", "LetterHistoryService", "x", "r", "s", "o", "import_corelib", "import_corelib", "LetterHistoryDialog", "LetterHistoryForm", "LetterHistoryRow", "LetterHistoryService", "__name", "__decorateClass", "LetterHistoryGrid", "LetterHistoryColumns", "LetterHistoryDialog", "LetterHistoryRow", "LetterHistoryService", "container", "__name", "__decorateClass", "pageInit", "LetterHistoryGrid", "__name"]
}
