{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/RelatedLettersDB/RelatedLettersColumns.ts", "../../../Modules/ServerTypes/RelatedLettersDB/RelatedLettersRow.ts", "../../../Modules/ServerTypes/RelatedLettersDB/RelatedLettersService.ts", "../../../Modules/ServerTypes/RelatedLettersDB/RelatedLettersForm.ts", "../../../Modules/ServerTypes/Modules/Enums.Letter.RelationTypes.ts", "../../../Modules/RelatedLettersDB/RelatedLetters/RelatedLettersDialog.ts"],
  "sourcesContent": ["\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { RelatedLettersRow } from \"./RelatedLettersRow\";\r\n\r\nexport interface RelatedLettersColumns {\r\n    LetterIdentifier: Column<RelatedLettersRow>;\r\n    RelationType: Column<RelatedLettersRow>;\r\n    CreatedDate: Column<RelatedLettersRow>;\r\n}\r\n\r\nexport class RelatedLettersColumns extends ColumnsBase<RelatedLettersRow> {\r\n    static readonly columnsKey = 'RelatedLettersDB.RelatedLetters';\r\n    static readonly Fields = fieldsProxy<RelatedLettersColumns>();\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface RelatedLettersRow {\r\n    Id?: string;\r\n    LetterId?: string;\r\n    RelatedLetterId?: string;\r\n    RelationType?: number;\r\n    CreatedDate?: string;\r\n    CreatorUserName?: string;\r\n    ModifiedDate?: string;\r\n    ModifiedUserName?: string;\r\n    IsActive?: number;\r\n    LetterIdentifier?: string;\r\n}\r\n\r\nexport abstract class RelatedLettersRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'CreatorUserName';\r\n    static readonly localTextPrefix = 'RelatedLettersDB.RelatedLetters';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<RelatedLettersRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { RelatedLettersRow } from \"./RelatedLettersRow\";\r\n\r\nexport namespace RelatedLettersService {\r\n    export const baseUrl = 'RelatedLettersDB/RelatedLetters';\r\n\r\n    export declare function Create(request: SaveRequest<RelatedLettersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<RelatedLettersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<RelatedLettersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<RelatedLettersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"RelatedLettersDB/RelatedLetters/Create\",\r\n        Update: \"RelatedLettersDB/RelatedLetters/Update\",\r\n        Delete: \"RelatedLettersDB/RelatedLetters/Delete\",\r\n        Retrieve: \"RelatedLettersDB/RelatedLetters/Retrieve\",\r\n        List: \"RelatedLettersDB/RelatedLetters/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>RelatedLettersService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { ServiceLookupEditor, EnumEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { RelationTypes } from \"../Modules/Enums.Letter.RelationTypes\";\n\nexport interface RelatedLettersForm {\n    RelatedLetterId: ServiceLookupEditor;\n    RelationType: EnumEditor;\n}\n\nexport class RelatedLettersForm extends PrefixedContext {\n    static readonly formKey = 'RelatedLettersDB.RelatedLetters';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!RelatedLettersForm.init)  {\n            RelatedLettersForm.init = true;\n\n            var w0 = ServiceLookupEditor;\n            var w1 = EnumEditor;\n\n            initFormType(RelatedLettersForm, [\n                'RelatedLetterId', w0,\n                'RelationType', w1\n            ]);\n        }\n    }\n}\n\n[RelationTypes]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum RelationTypes {\n    Connecting = 1,\n    Follower = 2,\n    Return = 3\n}\nDecorators.registerEnumType(RelationTypes, 'CorrespondenceSystem.Modules.Enums.Letter.RelationTypes', 'RelationTypes');", "\uFEFFimport { RelatedLettersForm, RelatedLettersRow, RelatedLettersService } from '@/ServerTypes/RelatedLettersDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.RelatedLettersDB.RelatedLettersDialog')\r\nexport class RelatedLettersDialog extends EntityDialog<RelatedLettersRow, any> {\r\n    protected getFormKey() { return RelatedLettersForm.formKey; }\r\n    protected getRowDefinition() { return RelatedLettersRow; }\r\n    protected getService() { return RelatedLettersService.baseUrl; }\r\n\r\n    protected form = new RelatedLettersForm(this.idPrefix);\r\n}"],
  "mappings": "6DAAC,IAAAA,EAAyC,SAUnC,IAAMC,EAAN,MAAMA,UAA8B,aAA+B,CAG1E,EAH0EC,EAAAD,EAAA,yBAA7DA,EACO,WAAa,kCADpBA,EAEO,UAAS,eAAmC,EAFzD,IAAME,EAANF,ECVN,IAAAG,EAA4B,SAetB,IAAeC,EAAf,MAAeA,CAAkB,CAWxC,EAXwCC,EAAAD,EAAA,qBAAlBA,EACF,WAAa,KADXA,EAEF,iBAAmB,WAFjBA,EAGF,aAAe,kBAHbA,EAIF,gBAAkB,kCAJhBA,EAKF,iBAAmB,yBALjBA,EAMF,iBAAmB,yBANjBA,EAOF,eAAiB,yBAPfA,EAQF,iBAAmB,yBARjBA,EAUF,UAAS,eAA+B,EAVrD,IAAeE,EAAfF,ECfN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,kCAQVA,EAAA,QAAU,CACnB,OAAQ,yCACR,OAAQ,yCACR,OAAQ,yCACR,SAAU,2CACV,KAAM,sCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAuBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACjD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA+E,SCA/E,IAAAC,EAA2B,SAEhBC,OACRA,IAAA,WAAa,GAAb,aACAA,IAAA,SAAW,GAAX,WACAA,IAAA,OAAS,GAAT,SAHQA,OAAA,IAKZ,aAAW,iBAAiBA,EAAe,0DAA2D,eAAe,EDC9G,IAAMC,EAAN,MAAMA,UAA2B,iBAAgB,CAIpD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAmB,KAAO,CAC3BA,EAAmB,KAAO,GAE1B,IAAIE,EAAK,sBACLC,EAAK,gBAET,gBAAaH,EAAoB,CAC7B,kBAAmBE,EACnB,eAAgBC,CACpB,CAAC,CACL,CACJ,CACJ,EAnBwDC,EAAAJ,EAAA,sBAA3CA,EACO,QAAU,kCADvB,IAAMK,EAANL,EEPP,IAAAM,EAAyC,SAGlC,IAAMC,EAAN,cAAmC,cAAqC,CAAxE,kCAKH,KAAU,KAAO,IAAIC,EAAmB,KAAK,QAAQ,EAJ3C,YAAa,CAAE,OAAOA,EAAmB,OAAS,CAClD,kBAAmB,CAAE,OAAOC,CAAmB,CAC/C,YAAa,CAAE,OAAOC,EAAsB,OAAS,CAGnE,EAN+EC,EAAAJ,EAAA,wBAAlEA,EAANK,EAAA,CADN,aAAW,cAAc,4DAA4D,GACzEL",
  "names": ["import_corelib", "_RelatedLettersColumns", "__name", "RelatedLettersColumns", "import_corelib", "_RelatedLettersRow", "__name", "RelatedLettersRow", "import_corelib", "RelatedLettersService", "x", "r", "s", "o", "import_corelib", "import_corelib", "RelationTypes", "_RelatedLettersForm", "prefix", "w0", "w1", "__name", "RelatedLettersForm", "import_corelib", "RelatedLettersDialog", "RelatedLettersForm", "RelatedLettersRow", "RelatedLettersService", "__name", "__decorateClass"]
}
