{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/SignLettersDB/SignLettersColumns.ts", "../../../Modules/ServerTypes/SignLettersDB/SignLettersRow.ts", "../../../Modules/ServerTypes/SignLettersDB/SignLettersService.ts", "../../../Modules/ServerTypes/SignLettersDB/SignLettersForm.ts", "../../../Modules/SignLettersDB/SignLetters/SignLettersDialog.ts"],
  "sourcesContent": ["\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { SignLettersRow } from \"./SignLettersRow\";\n\nexport interface SignLettersColumns {\n    SignTitle: Column<SignLettersRow>;\n    CreatedDate: Column<SignLettersRow>;\n}\n\nexport class SignLettersColumns extends ColumnsBase<SignLettersRow> {\n    static readonly columnsKey = 'SignLettersDB.SignLetters';\n    static readonly Fields = fieldsProxy<SignLettersColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface SignLettersRow {\n    Id?: string;\n    LetterId?: string;\n    SignId?: string;\n    SignType?: number;\n    SignDate?: string;\n    CreatedDate?: string;\n    CreatorUserName?: string;\n    ModifiedUserName?: string;\n    LetterIdentifier?: string;\n    SignTitle?: string;\n}\n\nexport abstract class SignLettersRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'CreatorUserName';\n    static readonly localTextPrefix = 'SignLettersDB.SignLetters';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<SignLettersRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { SignLettersRow } from \"./SignLettersRow\";\n\nexport namespace SignLettersService {\n    export const baseUrl = 'SignLettersDB/SignLetters';\n\n    export declare function Create(request: SaveRequest<SignLettersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<SignLettersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SignLettersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SignLettersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"SignLettersDB/SignLetters/Create\",\n        Update: \"SignLettersDB/SignLetters/Update\",\n        Delete: \"SignLettersDB/SignLetters/Delete\",\n        Retrieve: \"SignLettersDB/SignLetters/Retrieve\",\n        List: \"SignLettersDB/SignLetters/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SignLettersService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { PrefixedContext } from \"@serenity-is/corelib\";\n\nexport interface SignLettersForm {\n}\n\nexport class SignLettersForm extends PrefixedContext {\n    static readonly formKey = 'SignLettersDB.SignLetters';\n}", "\uFEFFimport { SignLettersForm, SignLettersRow, SignLettersService } from '@/ServerTypes/SignLettersDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.SignLettersDB.SignLettersDialog')\nexport class SignLettersDialog extends EntityDialog<SignLettersRow, any> {\n    protected getFormKey() { return SignLettersForm.formKey; }\n    protected getRowDefinition() { return SignLettersRow; }\n    protected getService() { return SignLettersService.baseUrl; }\n\n    protected form = new SignLettersForm(this.idPrefix);\n}"],
  "mappings": "6DAAC,IAAAA,EAAyC,SASnC,IAAMC,EAAN,MAAMA,UAA2B,aAA4B,CAGpE,EAHoEC,EAAAD,EAAA,sBAAvDA,EACO,WAAa,4BADpBA,EAEO,UAAS,eAAgC,EAFtD,IAAME,EAANF,ECTN,IAAAG,EAA4B,SAetB,IAAeC,EAAf,MAAeA,CAAe,CAUrC,EAVqCC,EAAAD,EAAA,kBAAfA,EACF,WAAa,KADXA,EAEF,aAAe,kBAFbA,EAGF,gBAAkB,4BAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAA4B,EATlD,IAAeE,EAAfF,ECfN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,4BAQVA,EAAA,QAAU,CACnB,OAAQ,mCACR,OAAQ,mCACR,OAAQ,mCACR,SAAU,qCACV,KAAM,gCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAoBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC9C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAAgC,SAK1B,IAAMC,EAAN,MAAMA,UAAwB,iBAAgB,CAErD,EAFqDC,EAAAD,EAAA,mBAAxCA,EACO,QAAU,4BADvB,IAAME,EAANF,ECJP,IAAAG,EAAyC,SAGlC,IAAMC,EAAN,cAAgC,cAAkC,CAAlE,kCAKH,KAAU,KAAO,IAAIC,EAAgB,KAAK,QAAQ,EAJxC,YAAa,CAAE,OAAOA,EAAgB,OAAS,CAC/C,kBAAmB,CAAE,OAAOC,CAAgB,CAC5C,YAAa,CAAE,OAAOC,EAAmB,OAAS,CAGhE,EANyEC,EAAAJ,EAAA,qBAA5DA,EAANK,EAAA,CADN,aAAW,cAAc,sDAAsD,GACnEL",
  "names": ["import_corelib", "_SignLettersColumns", "__name", "SignLettersColumns", "import_corelib", "_SignLettersRow", "__name", "SignLettersRow", "import_corelib", "SignLettersService", "x", "r", "s", "o", "import_corelib", "_SignLettersForm", "__name", "SignLettersForm", "import_corelib", "SignLettersDialog", "SignLettersForm", "SignLettersRow", "SignLettersService", "__name", "__decorateClass"]
}
