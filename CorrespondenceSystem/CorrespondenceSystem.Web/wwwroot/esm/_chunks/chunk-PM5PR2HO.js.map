{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/CounterpartDB/CounterpartColumns.ts", "../../../Modules/ServerTypes/CounterpartDB/CounterpartRow.ts", "../../../Modules/ServerTypes/CounterpartDB/CounterpartService.ts", "../../../Modules/ServerTypes/CounterpartDB/CounterpartForm.ts", "../../../Modules/ServerTypes/Modules/Enums.Letter.CopyType.ts", "../../../Modules/CounterpartDB/Counterpart/CounterpartDialog.ts"],
  "sourcesContent": ["\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { CounterpartRow } from \"./CounterpartRow\";\n\nexport interface CounterpartColumns {\n    LetterIdentifier: Column<CounterpartRow>;\n    CopyType: Column<CounterpartRow>;\n    CreatedDate: Column<CounterpartRow>;\n}\n\nexport class CounterpartColumns extends ColumnsBase<CounterpartRow> {\n    static readonly columnsKey = 'CounterpartDB.Counterpart';\n    static readonly Fields = fieldsProxy<CounterpartColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CounterpartRow {\n    Id?: string;\n    LetterId?: string;\n    ReciverId?: string;\n    CopyType?: number;\n    CreatedDate?: string;\n    CreatorUserName?: string;\n    ModifiedDate?: string;\n    ModifiedUserName?: string;\n    IsActive?: number;\n    LetterIdentifier?: string;\n    ReciverName?: string;\n}\n\nexport abstract class CounterpartRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'CreatorUserName';\n    static readonly localTextPrefix = 'CounterpartDB.Counterpart';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<CounterpartRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { CounterpartRow } from \"./CounterpartRow\";\r\n\r\nexport namespace CounterpartService {\r\n    export const baseUrl = 'CounterpartDB/Counterpart';\r\n\r\n    export declare function Create(request: SaveRequest<CounterpartRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<CounterpartRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CounterpartRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CounterpartRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"CounterpartDB/Counterpart/Create\",\r\n        Update: \"CounterpartDB/Counterpart/Update\",\r\n        Delete: \"CounterpartDB/Counterpart/Delete\",\r\n        Retrieve: \"CounterpartDB/Counterpart/Retrieve\",\r\n        List: \"CounterpartDB/Counterpart/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>CounterpartService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { ServiceLookupEditor, EnumEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { CopyType } from \"../Modules/Enums.Letter.CopyType\";\n\nexport interface CounterpartForm {\n    ReciverId: ServiceLookupEditor;\n    CopyType: EnumEditor;\n}\n\nexport class CounterpartForm extends PrefixedContext {\n    static readonly formKey = 'CounterpartDB.Counterpart';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CounterpartForm.init)  {\n            CounterpartForm.init = true;\n\n            var w0 = ServiceLookupEditor;\n            var w1 = EnumEditor;\n\n            initFormType(CounterpartForm, [\n                'ReciverId', w0,\n                'CopyType', w1\n            ]);\n        }\n    }\n}\n\n[CopyType]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum CopyType {\n    Copy = 1,\n    ForInformation = 2\n}\nDecorators.registerEnumType(CopyType, 'CorrespondenceSystem.Modules.Enums.Letter.CopyType', 'CopyType');", "\uFEFFimport { CounterpartForm, CounterpartRow, CounterpartService } from '@/ServerTypes/CounterpartDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.CounterpartDB.CounterpartDialog')\r\nexport class CounterpartDialog extends EntityDialog<CounterpartRow, any> {\r\n    protected getFormKey() { return CounterpartForm.formKey; }\r\n    protected getRowDefinition() { return CounterpartRow; }\r\n    protected getService() { return CounterpartService.baseUrl; }\r\n\r\n    protected form = new CounterpartForm(this.idPrefix);\r\n}"],
  "mappings": "6DAAC,IAAAA,EAAyC,SAUnC,IAAMC,EAAN,MAAMA,UAA2B,aAA4B,CAGpE,EAHoEC,EAAAD,EAAA,sBAAvDA,EACO,WAAa,4BADpBA,EAEO,UAAS,eAAgC,EAFtD,IAAME,EAANF,ECVN,IAAAG,EAA4B,SAgBtB,IAAeC,EAAf,MAAeA,CAAe,CAWrC,EAXqCC,EAAAD,EAAA,kBAAfA,EACF,WAAa,KADXA,EAEF,iBAAmB,WAFjBA,EAGF,aAAe,kBAHbA,EAIF,gBAAkB,4BAJhBA,EAKF,iBAAmB,yBALjBA,EAMF,iBAAmB,yBANjBA,EAOF,eAAiB,yBAPfA,EAQF,iBAAmB,yBARjBA,EAUF,UAAS,eAA4B,EAVlD,IAAeE,EAAfF,EChBN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,4BAQVA,EAAA,QAAU,CACnB,OAAQ,mCACR,OAAQ,mCACR,OAAQ,mCACR,SAAU,qCACV,KAAM,gCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAoBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC9C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA+E,SCA/E,IAAAC,EAA2B,SAEhBC,OACRA,IAAA,KAAO,GAAP,OACAA,IAAA,eAAiB,GAAjB,iBAFQA,OAAA,IAIZ,aAAW,iBAAiBA,EAAU,qDAAsD,UAAU,EDE/F,IAAMC,EAAN,MAAMA,UAAwB,iBAAgB,CAIjD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAgB,KAAO,CACxBA,EAAgB,KAAO,GAEvB,IAAIE,EAAK,sBACLC,EAAK,gBAET,gBAAaH,EAAiB,CAC1B,YAAaE,EACb,WAAYC,CAChB,CAAC,CACL,CACJ,CACJ,EAnBqDC,EAAAJ,EAAA,mBAAxCA,EACO,QAAU,4BADvB,IAAMK,EAANL,EEPP,IAAAM,EAAyC,SAGlC,IAAMC,EAAN,cAAgC,cAAkC,CAAlE,kCAKH,KAAU,KAAO,IAAIC,EAAgB,KAAK,QAAQ,EAJxC,YAAa,CAAE,OAAOA,EAAgB,OAAS,CAC/C,kBAAmB,CAAE,OAAOC,CAAgB,CAC5C,YAAa,CAAE,OAAOC,EAAmB,OAAS,CAGhE,EANyEC,EAAAJ,EAAA,qBAA5DA,EAANK,EAAA,CADN,aAAW,cAAc,sDAAsD,GACnEL",
  "names": ["import_corelib", "_CounterpartColumns", "__name", "CounterpartColumns", "import_corelib", "_CounterpartRow", "__name", "CounterpartRow", "import_corelib", "CounterpartService", "x", "r", "s", "o", "import_corelib", "import_corelib", "CopyType", "_CounterpartForm", "prefix", "w0", "w1", "__name", "CounterpartForm", "import_corelib", "CounterpartDialog", "CounterpartForm", "CounterpartRow", "CounterpartService", "__name", "__decorateClass"]
}
