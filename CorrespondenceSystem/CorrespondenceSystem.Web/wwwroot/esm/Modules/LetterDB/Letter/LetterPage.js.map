{
  "version": 3,
  "sources": ["../../../../../Modules/LetterDB/Letter/LetterPage.ts", "../../../../../Modules/ServerTypes/LetterDB/LetterColumns.ts", "../../../../../Modules/ServerTypes/Modules/Enums.Letter.States.ts", "../../../../../Modules/LetterAttachmentDB/LetterAttachment/LetterAttachmentEditor.ts", "../../../../../Modules/ServerTypes/LetterDB/LetterForm.ts", "../../../../../Modules/ServerTypes/Modules/Enums.Letter.ConfidentialLevels.ts", "../../../../../Modules/ServerTypes/Modules/Enums.Letter.LetterTypes.ts", "../../../../../Modules/ServerTypes/Modules/Enums.Letter.PriorityStates.ts", "../../../../../Modules/ServerTypes/LetterDB/LetterRow.ts", "../../../../../Modules/ServerTypes/LetterDB/LetterService.ts", "../../../../../Modules/LetterDB/Letter/LetterGrid.ts", "../../../../../Modules/LetterDB/Letter/LetterDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib';\r\nimport { LetterGrid } from './LetterGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new LetterGrid($('#GridDiv')).element);\r\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { States } from \"../Modules/Enums.Letter.States\";\nimport { LetterRow } from \"./LetterRow\";\n\nexport interface LetterColumns {\n    Title: Column<LetterRow>;\n    GrandSubjectTitle: Column<LetterRow>;\n    LetterNo: Column<LetterRow>;\n    State: Column<LetterRow>;\n    LetterType: Column<LetterRow>;\n}\n\nexport class LetterColumns extends ColumnsBase<LetterRow> {\n    static readonly columnsKey = 'LetterDB.Letter';\n    static readonly Fields = fieldsProxy<LetterColumns>();\n}\n\n[States]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum States {\n    Draft = 0,\n    Posted = 1,\n    Received = 2\n}\nDecorators.registerEnumType(States, 'CorrespondenceSystem.Modules.Enums.Letter.States', 'State');", "import { LetterAttachmentColumns, LetterAttachmentRow } from \"@/ServerTypes/LetterAttachmentDB\";\r\nimport { Decorators, alertDialog, toId } from \"@serenity-is/corelib\";\r\nimport { GridEditorBase } from \"@serenity-is/extensions\";\r\nimport { LetterAttachmentDialog } from \"./LetterAttachmentDialog\";\r\n\r\n@Decorators.registerEditor('CorrespondenceSystem.LetterAttachmentDB.LetterAttachmentEditor')\r\nexport class LetterAttachmentEditor<P = {}> extends GridEditorBase<LetterAttachmentRow, P> {\r\n    protected getColumnsKey() { return LetterAttachmentColumns.columnsKey; }\r\n    protected getDialogType() { return LetterAttachmentDialog; }\r\n    protected getLocalTextPrefix() { return LetterAttachmentRow.localTextPrefix; }\r\n\r\n//    validateEntity(row, id) {\r\n//        row.ProductID = toId(row.ProductID);\r\n\r\n//        var sameProduct = this.view.getItems().find(x => x.ProductID === row.ProductID);\r\n//        if (sameProduct && this.id(sameProduct) !== id) {\r\n//            alertDialog('This product is already in order details!');\r\n//            return false;\r\n//        }\r\n\r\n//        id ??= row[this.getIdProperty()];\r\n\r\n//        ProductRow.getLookupAsync().then(lookup => {\r\n//            var item = this.view?.getItemById?.(id);\r\n//            if (item) {\r\n//                item.ProductName = lookup.itemById[row.ProductID].ProductName;\r\n//                this.view.updateItem(id, item);\r\n//            }\r\n//        });\r\n\r\n//        row.LineTotal = (row.Quantity || 0) * (row.UnitPrice || 0) - (row.Discount || 0);\r\n//        return true;\r\n//    }\r\n}", "\uFEFFimport { LetterAttachmentEditor } from \"@/LetterAttachmentDB/LetterAttachment/LetterAttachmentEditor\";\nimport { RadioButtonEditor, StringEditor, EnumEditor, ServiceLookupEditor, BooleanEditor, LookupEditor, TextAreaEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { ConfidentialLevels } from \"../Modules/Enums.Letter.ConfidentialLevels\";\nimport { LetterTypes } from \"../Modules/Enums.Letter.LetterTypes\";\nimport { PriorityStates } from \"../Modules/Enums.Letter.PriorityStates\";\nimport { States } from \"../Modules/Enums.Letter.States\";\n\nexport interface LetterForm {\n    LetterType: RadioButtonEditor;\n    Title: StringEditor;\n    LetterIdentifier: StringEditor;\n    LetterIdentifierGen: StringEditor;\n    LetterNo: StringEditor;\n    PriorityState: RadioButtonEditor;\n    ConfidentialLevel: RadioButtonEditor;\n    State: EnumEditor;\n    SenderId: ServiceLookupEditor;\n    ReceiverId: ServiceLookupEditor;\n    GrandSubjectId: ServiceLookupEditor;\n    UseDefaultTemplate: BooleanEditor;\n    TemplateId: LookupEditor;\n    LetterContent: TextAreaEditor;\n    Tag: StringEditor;\n    LetterCarrier: StringEditor;\n    HasAttachment: BooleanEditor;\n    NeedAnswer: BooleanEditor;\n    DetailList: LetterAttachmentEditor;\n}\n\nexport class LetterForm extends PrefixedContext {\n    static readonly formKey = 'LetterDB.Letter';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!LetterForm.init)  {\n            LetterForm.init = true;\n\n            var w0 = RadioButtonEditor;\n            var w1 = StringEditor;\n            var w2 = EnumEditor;\n            var w3 = ServiceLookupEditor;\n            var w4 = BooleanEditor;\n            var w5 = LookupEditor;\n            var w6 = TextAreaEditor;\n            var w7 = LetterAttachmentEditor;\n\n            initFormType(LetterForm, [\n                'LetterType', w0,\n                'Title', w1,\n                'LetterIdentifier', w1,\n                'LetterIdentifierGen', w1,\n                'LetterNo', w1,\n                'PriorityState', w0,\n                'ConfidentialLevel', w0,\n                'State', w2,\n                'SenderId', w3,\n                'ReceiverId', w3,\n                'GrandSubjectId', w3,\n                'UseDefaultTemplate', w4,\n                'TemplateId', w5,\n                'LetterContent', w6,\n                'Tag', w1,\n                'LetterCarrier', w1,\n                'HasAttachment', w4,\n                'NeedAnswer', w4,\n                'DetailList', w7\n            ]);\n        }\n    }\n}\n\n[LetterTypes, PriorityStates, ConfidentialLevels, States]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum ConfidentialLevels {\n    Normal = 0,\n    Secret = 1\n}\nDecorators.registerEnumType(ConfidentialLevels, 'CorrespondenceSystem.Modules.Enums.Letter.ConfidentialLevels', 'ConfidentialLevels');", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum LetterTypes {\n    Outgoing = 0,\n    Incoming = 1\n}\nDecorators.registerEnumType(LetterTypes, 'CorrespondenceSystem.Modules.Enums.Letter.LetterTypes', 'LetterTypes');", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum PriorityStates {\n    Urgent = 0,\n    Instant = 1,\n    Normal = 2\n}\nDecorators.registerEnumType(PriorityStates, 'CorrespondenceSystem.Modules.Enums.Letter.PriorityStates', 'PriorityState');", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\nimport { LetterAttachmentRow } from \"../LetterAttachmentDB/LetterAttachmentRow\";\n\nexport interface LetterRow {\n    Id?: string;\n    UseDefaultTemplate?: boolean;\n    TemplateId?: string;\n    SenderId?: string;\n    ReceiverId?: string;\n    GrandSubjectId?: string;\n    LetterIdentifier?: string;\n    LetterIdentifierGen?: string;\n    LetterNo?: string;\n    Title?: string;\n    LetterContent?: string;\n    Tag?: string;\n    LetterType?: number;\n    State?: number;\n    PriorityState?: number;\n    ConfidentialLevel?: number;\n    HasAttachment?: boolean;\n    CreatedDate?: string;\n    CreatorUserName?: string;\n    ModifiedDate?: string;\n    ModifiedUserName?: string;\n    LetterCarrier?: string;\n    NeedAnswer?: boolean;\n    LetterFile?: string;\n    TemplateTitle?: string;\n    SenderName?: string;\n    ReceiverName?: string;\n    GrandSubjectTitle?: string;\n    DetailList?: LetterAttachmentRow[];\n}\n\nexport abstract class LetterRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'LetterIdentifier';\n    static readonly localTextPrefix = 'LetterDB.Letter';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<LetterRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { LetterRow } from \"./LetterRow\";\r\n\r\nexport namespace LetterService {\r\n    export const baseUrl = 'LetterDB/Letter';\r\n\r\n    export declare function Create(request: SaveRequest<LetterRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<LetterRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<LetterRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<LetterRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"LetterDB/Letter/Create\",\r\n        Update: \"LetterDB/Letter/Update\",\r\n        Delete: \"LetterDB/Letter/Delete\",\r\n        Retrieve: \"LetterDB/Letter/Retrieve\",\r\n        List: \"LetterDB/Letter/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>LetterService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { LetterColumns, LetterRow, LetterService } from '@/ServerTypes/LetterDB';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { LetterDialog } from './LetterDialog';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.LetterDB.LetterGrid')\r\nexport class LetterGrid extends EntityGrid<LetterRow, any> {\r\n    protected getColumnsKey() { return LetterColumns.columnsKey; }\r\n    protected getDialogType() { return LetterDialog; }\r\n    protected getRowDefinition() { return LetterRow; }\r\n    protected getService() { return LetterService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n}", "\uFEFFimport { LetterForm, LetterRow, LetterService } from '@/ServerTypes/LetterDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.LetterDB.LetterDialog')\r\nexport class LetterDialog extends EntityDialog<LetterRow, any> {\r\n    protected getFormKey() { return LetterForm.formKey; }\r\n    protected getRowDefinition() { return LetterRow; }\r\n    protected getService() { return LetterService.baseUrl; }\r\n\r\n    protected form = new LetterForm(this.idPrefix);\r\n}"],
  "mappings": "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",
  "names": ["import_corelib", "import_corelib", "import_corelib", "States", "_LetterColumns", "__name", "LetterColumns", "import_corelib", "import_extensions", "LetterAttachmentEditor", "LetterAttachmentColumns", "LetterAttachmentDialog", "LetterAttachmentRow", "__name", "__decorateClass", "import_corelib", "import_corelib", "ConfidentialLevels", "import_corelib", "LetterTypes", "import_corelib", "PriorityStates", "_LetterForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "w6", "w7", "LetterAttachmentEditor", "__name", "LetterForm", "import_corelib", "_LetterRow", "__name", "LetterRow", "import_corelib", "LetterService", "x", "r", "s", "o", "import_corelib", "import_corelib", "LetterDialog", "LetterForm", "LetterRow", "LetterService", "__name", "__decorateClass", "LetterGrid", "LetterColumns", "LetterDialog", "LetterRow", "LetterService", "container", "__name", "__decorateClass", "pageInit", "LetterGrid", "__name"]
}
