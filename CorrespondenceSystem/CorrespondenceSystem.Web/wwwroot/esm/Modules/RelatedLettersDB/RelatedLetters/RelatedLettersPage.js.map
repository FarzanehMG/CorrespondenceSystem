{
  "version": 3,
  "sources": ["../../../../../Modules/RelatedLettersDB/RelatedLetters/RelatedLettersPage.ts", "../../../../../Modules/ServerTypes/RelatedLettersDB/RelatedLettersColumns.ts", "../../../../../Modules/ServerTypes/RelatedLettersDB/RelatedLettersForm.ts", "../../../../../Modules/ServerTypes/RelatedLettersDB/RelatedLettersRow.ts", "../../../../../Modules/ServerTypes/RelatedLettersDB/RelatedLettersService.ts", "../../../../../Modules/RelatedLettersDB/RelatedLetters/RelatedLettersGrid.ts", "../../../../../Modules/RelatedLettersDB/RelatedLetters/RelatedLettersDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib';\r\nimport { RelatedLettersGrid } from './RelatedLettersGrid';\r\n\r\nexport default function pageInit() {\n    initFullHeightGridPage(new RelatedLettersGrid($('#GridDiv')).element);\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { RelatedLettersRow } from \"./RelatedLettersRow\";\r\n\r\nexport interface RelatedLettersColumns {\r\n    Id: Column<RelatedLettersRow>;\r\n    LetterIdentifier: Column<RelatedLettersRow>;\r\n    RelatedLetterId: Column<RelatedLettersRow>;\r\n    RelationType: Column<RelatedLettersRow>;\r\n    CreatedDate: Column<RelatedLettersRow>;\r\n    CreatorUserName: Column<RelatedLettersRow>;\r\n    ModifiedDate: Column<RelatedLettersRow>;\r\n    ModifiedUserName: Column<RelatedLettersRow>;\r\n}\r\n\r\nexport class RelatedLettersColumns extends ColumnsBase<RelatedLettersRow> {\r\n    static readonly columnsKey = 'RelatedLettersDB.RelatedLetters';\r\n    static readonly Fields = fieldsProxy<RelatedLettersColumns>();\r\n}", "\uFEFFimport { ServiceLookupEditor, StringEditor, IntegerEditor, DateEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface RelatedLettersForm {\r\n    LetterId: ServiceLookupEditor;\r\n    RelatedLetterId: StringEditor;\r\n    RelationType: IntegerEditor;\r\n    CreatedDate: DateEditor;\r\n    CreatorUserName: StringEditor;\r\n    ModifiedDate: DateEditor;\r\n    ModifiedUserName: StringEditor;\r\n}\r\n\r\nexport class RelatedLettersForm extends PrefixedContext {\r\n    static readonly formKey = 'RelatedLettersDB.RelatedLetters';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!RelatedLettersForm.init)  {\r\n            RelatedLettersForm.init = true;\r\n\r\n            var w0 = ServiceLookupEditor;\r\n            var w1 = StringEditor;\r\n            var w2 = IntegerEditor;\r\n            var w3 = DateEditor;\r\n\r\n            initFormType(RelatedLettersForm, [\r\n                'LetterId', w0,\r\n                'RelatedLetterId', w1,\r\n                'RelationType', w2,\r\n                'CreatedDate', w3,\r\n                'CreatorUserName', w1,\r\n                'ModifiedDate', w3,\r\n                'ModifiedUserName', w1\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface RelatedLettersRow {\r\n    Id?: string;\r\n    LetterId?: string;\r\n    RelatedLetterId?: string;\r\n    RelationType?: number;\r\n    CreatedDate?: string;\r\n    CreatorUserName?: string;\r\n    ModifiedDate?: string;\r\n    ModifiedUserName?: string;\r\n    IsActive?: number;\r\n    LetterIdentifier?: string;\r\n}\r\n\r\nexport abstract class RelatedLettersRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'CreatorUserName';\r\n    static readonly localTextPrefix = 'RelatedLettersDB.RelatedLetters';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<RelatedLettersRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { RelatedLettersRow } from \"./RelatedLettersRow\";\r\n\r\nexport namespace RelatedLettersService {\r\n    export const baseUrl = 'RelatedLettersDB/RelatedLetters';\r\n\r\n    export declare function Create(request: SaveRequest<RelatedLettersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<RelatedLettersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<RelatedLettersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<RelatedLettersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"RelatedLettersDB/RelatedLetters/Create\",\r\n        Update: \"RelatedLettersDB/RelatedLetters/Update\",\r\n        Delete: \"RelatedLettersDB/RelatedLetters/Delete\",\r\n        Retrieve: \"RelatedLettersDB/RelatedLetters/Retrieve\",\r\n        List: \"RelatedLettersDB/RelatedLetters/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>RelatedLettersService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { RelatedLettersColumns, RelatedLettersRow, RelatedLettersService } from '@/ServerTypes/RelatedLettersDB';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { RelatedLettersDialog } from './RelatedLettersDialog';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.RelatedLettersDB.RelatedLettersGrid')\nexport class RelatedLettersGrid extends EntityGrid<RelatedLettersRow, any> {\n    protected getColumnsKey() { return RelatedLettersColumns.columnsKey; }\n    protected getDialogType() { return RelatedLettersDialog; }\n    protected getRowDefinition() { return RelatedLettersRow; }\n    protected getService() { return RelatedLettersService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n}", "\uFEFFimport { RelatedLettersForm, RelatedLettersRow, RelatedLettersService } from '@/ServerTypes/RelatedLettersDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.RelatedLettersDB.RelatedLettersDialog')\r\nexport class RelatedLettersDialog extends EntityDialog<RelatedLettersRow, any> {\r\n    protected getFormKey() { return RelatedLettersForm.formKey; }\r\n    protected getRowDefinition() { return RelatedLettersRow; }\r\n    protected getService() { return RelatedLettersService.baseUrl; }\r\n\r\n    protected form = new RelatedLettersForm(this.idPrefix);\r\n}"],
  "mappings": "4EAAC,IAAAA,EAAuC,SCAvC,IAAAC,EAAyC,SAenC,IAAMC,EAAN,MAAMA,UAA8B,aAA+B,CAG1E,EAH0EC,EAAAD,EAAA,yBAA7DA,EACO,WAAa,kCADpBA,EAEO,UAAS,eAAmC,EAFzD,IAAME,EAANF,ECfN,IAAAG,EAA4G,SAYtG,IAAMC,EAAN,MAAMA,UAA2B,iBAAgB,CAIpD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAmB,KAAO,CAC3BA,EAAmB,KAAO,GAE1B,IAAIE,EAAK,sBACLC,EAAK,eACLC,EAAK,gBACLC,EAAK,gBAET,gBAAaL,EAAoB,CAC7B,WAAYE,EACZ,kBAAmBC,EACnB,eAAgBC,EAChB,cAAeC,EACf,kBAAmBF,EACnB,eAAgBE,EAChB,mBAAoBF,CACxB,CAAC,CACL,CACJ,CACJ,EA1BwDG,EAAAN,EAAA,sBAA3CA,EACO,QAAU,kCADvB,IAAMO,EAANP,ECZN,IAAAQ,EAA4B,SAetB,IAAeC,EAAf,MAAeA,CAAkB,CAWxC,EAXwCC,EAAAD,EAAA,qBAAlBA,EACF,WAAa,KADXA,EAEF,iBAAmB,WAFjBA,EAGF,aAAe,kBAHbA,EAIF,gBAAkB,kCAJhBA,EAKF,iBAAmB,yBALjBA,EAMF,iBAAmB,yBANjBA,EAOF,eAAiB,yBAPfA,EAQF,iBAAmB,yBARjBA,EAUF,UAAS,eAA+B,EAVrD,IAAeE,EAAfF,ECfN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,kCAQVA,EAAA,QAAU,CACnB,OAAQ,yCACR,OAAQ,yCACR,OAAQ,yCACR,SAAU,2CACV,KAAM,sCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAuBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACjD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SAGlC,IAAMC,EAAN,cAAmC,cAAqC,CAAxE,kCAKH,KAAU,KAAO,IAAIC,EAAmB,KAAK,QAAQ,EAJ3C,YAAa,CAAE,OAAOA,EAAmB,OAAS,CAClD,kBAAmB,CAAE,OAAOC,CAAmB,CAC/C,YAAa,CAAE,OAAOC,EAAsB,OAAS,CAGnE,EAN+EC,EAAAJ,EAAA,wBAAlEA,EAANK,EAAA,CADN,aAAW,cAAc,4DAA4D,GACzEL,GDCN,IAAMM,EAAN,cAAiC,YAAmC,CAC7D,eAAgB,CAAE,OAAOC,EAAsB,UAAY,CAC3D,eAAgB,CAAE,OAAOC,CAAsB,CAC/C,kBAAmB,CAAE,OAAOC,CAAmB,CAC/C,YAAa,CAAE,OAAOC,EAAsB,OAAS,CAE/D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EAT2EC,EAAAN,EAAA,sBAA9DA,EAANO,EAAA,CADN,aAAW,cAAc,0DAA0D,GACvEP,GLFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAmB,EAAE,UAAU,CAAC,EAAE,OAAO,CACxE,CAFwBC,EAAAF,EAAA",
  "names": ["import_corelib", "import_corelib", "_RelatedLettersColumns", "__name", "RelatedLettersColumns", "import_corelib", "_RelatedLettersForm", "prefix", "w0", "w1", "w2", "w3", "__name", "RelatedLettersForm", "import_corelib", "_RelatedLettersRow", "__name", "RelatedLettersRow", "import_corelib", "RelatedLettersService", "x", "r", "s", "o", "import_corelib", "import_corelib", "RelatedLettersDialog", "RelatedLettersForm", "RelatedLettersRow", "RelatedLettersService", "__name", "__decorateClass", "RelatedLettersGrid", "RelatedLettersColumns", "RelatedLettersDialog", "RelatedLettersRow", "RelatedLettersService", "container", "__name", "__decorateClass", "pageInit", "RelatedLettersGrid", "__name"]
}
