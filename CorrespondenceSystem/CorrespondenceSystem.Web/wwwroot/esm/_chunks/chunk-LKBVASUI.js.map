{
  "version": 3,
  "sources": ["external-global:Serenity.Extensions", "../../../Modules/ServerTypes/LetterAttachmentDB/LetterAttachmentColumns.ts", "../../../Modules/ServerTypes/LetterAttachmentDB/LetterAttachmentRow.ts", "../../../Modules/ServerTypes/LetterAttachmentDB/LetterAttachmentService.ts", "../../../Modules/ServerTypes/LetterAttachmentDB/LetterAttachmentForm.ts", "../../../Modules/LetterAttachmentDB/LetterAttachment/LetterAttachmentDialog.ts"],
  "sourcesContent": ["module.exports = Serenity.Extensions;", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { LetterAttachmentRow } from \"./LetterAttachmentRow\";\n\nexport interface LetterAttachmentColumns {\n    Id: Column<LetterAttachmentRow>;\n    LetterIdentifier: Column<LetterAttachmentRow>;\n    Title: Column<LetterAttachmentRow>;\n    AttachmentFile: Column<LetterAttachmentRow>;\n    CreatedDate: Column<LetterAttachmentRow>;\n    CreatorUserName: Column<LetterAttachmentRow>;\n    ModifiedDate: Column<LetterAttachmentRow>;\n    ModifiedUserName: Column<LetterAttachmentRow>;\n}\n\nexport class LetterAttachmentColumns extends ColumnsBase<LetterAttachmentRow> {\n    static readonly columnsKey = 'LetterAttachmentDB.LetterAttachment';\n    static readonly Fields = fieldsProxy<LetterAttachmentColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface LetterAttachmentRow {\n    Id?: string;\n    LetterId?: string;\n    Title?: string;\n    AttachmentFile?: string;\n    CreatedDate?: string;\n    CreatorUserName?: string;\n    ModifiedDate?: string;\n    ModifiedUserName?: string;\n    TimeStamp?: number[];\n    LetterIdentifier?: string;\n}\n\nexport abstract class LetterAttachmentRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Title';\n    static readonly localTextPrefix = 'LetterAttachmentDB.LetterAttachment';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<LetterAttachmentRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { LetterAttachmentRow } from \"./LetterAttachmentRow\";\n\nexport namespace LetterAttachmentService {\n    export const baseUrl = 'LetterAttachmentDB/LetterAttachment';\n\n    export declare function Create(request: SaveRequest<LetterAttachmentRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<LetterAttachmentRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<LetterAttachmentRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<LetterAttachmentRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"LetterAttachmentDB/LetterAttachment/Create\",\n        Update: \"LetterAttachmentDB/LetterAttachment/Update\",\n        Delete: \"LetterAttachmentDB/LetterAttachment/Delete\",\n        Retrieve: \"LetterAttachmentDB/LetterAttachment/Retrieve\",\n        List: \"LetterAttachmentDB/LetterAttachment/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>LetterAttachmentService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, ImageUploadEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface LetterAttachmentForm {\n    Title: StringEditor;\n    AttachmentFile: ImageUploadEditor;\n}\n\nexport class LetterAttachmentForm extends PrefixedContext {\n    static readonly formKey = 'LetterAttachmentDB.LetterAttachment';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!LetterAttachmentForm.init)  {\n            LetterAttachmentForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = ImageUploadEditor;\n\n            initFormType(LetterAttachmentForm, [\n                'Title', w0,\n                'AttachmentFile', w1\n            ]);\n        }\n    }\n}", "import { LetterAttachmentForm, LetterAttachmentRow, LetterAttachmentService } from '@/ServerTypes/LetterAttachmentDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\nimport { GridEditorDialog } from '@serenity-is/extensions';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.LetterAttachmentDB.LetterAttachmentDialog')\nexport class LetterAttachmentDialog extends GridEditorDialog<LetterAttachmentRow> {\n    protected getFormKey() { return LetterAttachmentForm.formKey; }\n    protected getRowDefinition() { return LetterAttachmentRow; }\n    protected getService() { return LetterAttachmentService.baseUrl; }\n\n    protected form = new LetterAttachmentForm(this.idPrefix);\n}"],
  "mappings": "oEAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAA,EAAO,QAAU,SAAS,aCAzB,IAAAC,EAAyC,SAenC,IAAMC,EAAN,MAAMA,UAAgC,aAAiC,CAG9E,EAH8EC,EAAAD,EAAA,2BAAjEA,EACO,WAAa,sCADpBA,EAEO,UAAS,eAAqC,EAF3D,IAAME,EAANF,ECfN,IAAAG,EAA4B,SAetB,IAAeC,EAAf,MAAeA,CAAoB,CAU1C,EAV0CC,EAAAD,EAAA,uBAApBA,EACF,WAAa,KADXA,EAEF,aAAe,QAFbA,EAGF,gBAAkB,sCAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAiC,EATvD,IAAeE,EAAfF,ECfN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,sCAQVA,EAAA,QAAU,CACnB,OAAQ,6CACR,OAAQ,6CACR,OAAQ,6CACR,SAAU,+CACV,KAAM,0CACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAyBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACnD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA+E,SAOzE,IAAMC,EAAN,MAAMA,UAA6B,iBAAgB,CAItD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAqB,KAAO,CAC7BA,EAAqB,KAAO,GAE5B,IAAIE,EAAK,eACLC,EAAK,uBAET,gBAAaH,EAAsB,CAC/B,QAASE,EACT,iBAAkBC,CACtB,CAAC,CACL,CACJ,CACJ,EAnB0DC,EAAAJ,EAAA,wBAA7CA,EACO,QAAU,sCADvB,IAAMK,EAANL,ECNP,IAAAM,EAAyC,SACzCC,EAAiC,SAG1B,IAAMC,EAAN,cAAqC,kBAAsC,CAA3E,kCAKH,KAAU,KAAO,IAAIC,EAAqB,KAAK,QAAQ,EAJ7C,YAAa,CAAE,OAAOA,EAAqB,OAAS,CACpD,kBAAmB,CAAE,OAAOC,CAAqB,CACjD,YAAa,CAAE,OAAOC,EAAwB,OAAS,CAGrE,EANkFC,EAAAJ,EAAA,0BAArEA,EAANK,EAAA,CADN,aAAW,cAAc,gEAAgE,GAC7EL",
  "names": ["require_Serenity", "__commonJSMin", "exports", "module", "import_corelib", "_LetterAttachmentColumns", "__name", "LetterAttachmentColumns", "import_corelib", "_LetterAttachmentRow", "__name", "LetterAttachmentRow", "import_corelib", "LetterAttachmentService", "x", "r", "s", "o", "import_corelib", "_LetterAttachmentForm", "prefix", "w0", "w1", "__name", "LetterAttachmentForm", "import_corelib", "import_extensions", "LetterAttachmentDialog", "LetterAttachmentForm", "LetterAttachmentRow", "LetterAttachmentService", "__name", "__decorateClass"]
}
