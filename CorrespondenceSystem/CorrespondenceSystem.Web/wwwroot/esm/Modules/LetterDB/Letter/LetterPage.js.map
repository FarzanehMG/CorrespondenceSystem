{
  "version": 3,
  "sources": ["../../../../../Modules/LetterDB/Letter/LetterPage.ts", "../../../../../Modules/ServerTypes/LetterDB/LetterColumns.ts", "../../../../../Modules/LetterAttachmentDB/LetterAttachment/LetterAttachmentEditor.ts", "../../../../../Modules/ServerTypes/LetterDB/LetterForm.ts", "../../../../../Modules/ServerTypes/LetterDB/LetterRow.ts", "../../../../../Modules/ServerTypes/LetterDB/LetterService.ts", "../../../../../Modules/LetterDB/Letter/LetterGrid.ts", "../../../../../Modules/LetterDB/Letter/LetterDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib';\r\nimport { LetterGrid } from './LetterGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new LetterGrid($('#GridDiv')).element);\r\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { LetterRow } from \"./LetterRow\";\r\n\r\nexport interface LetterColumns {\r\n    Id: Column<LetterRow>;\r\n    UseDefaultTemplate: Column<LetterRow>;\r\n    TemplateTitle: Column<LetterRow>;\r\n    SenderName: Column<LetterRow>;\r\n    ReceiverName: Column<LetterRow>;\r\n    GrandSubjectTitle: Column<LetterRow>;\r\n    LetterIdentifier: Column<LetterRow>;\r\n    LetterIdentifierGen: Column<LetterRow>;\r\n    LetterNo: Column<LetterRow>;\r\n    Title: Column<LetterRow>;\r\n    LetterContent: Column<LetterRow>;\r\n    Tag: Column<LetterRow>;\r\n    LetterType: Column<LetterRow>;\r\n    State: Column<LetterRow>;\r\n    PriorityState: Column<LetterRow>;\r\n    ConfidentialLevel: Column<LetterRow>;\r\n    HasAttachment: Column<LetterRow>;\r\n    CreatedDate: Column<LetterRow>;\r\n    CreatorUserName: Column<LetterRow>;\r\n    ModifiedDate: Column<LetterRow>;\r\n    ModifiedUserName: Column<LetterRow>;\r\n    TimeStamp: Column<LetterRow>;\r\n    LetterCarrier: Column<LetterRow>;\r\n    NeedAnswer: Column<LetterRow>;\r\n    LetterFile: Column<LetterRow>;\r\n}\r\n\r\nexport class LetterColumns extends ColumnsBase<LetterRow> {\r\n    static readonly columnsKey = 'LetterDB.Letter';\r\n    static readonly Fields = fieldsProxy<LetterColumns>();\r\n}", "import { LetterAttachmentColumns, LetterAttachmentRow } from \"@/ServerTypes/LetterAttachmentDB\";\r\nimport { Decorators, alertDialog, toId } from \"@serenity-is/corelib\";\r\nimport { GridEditorBase } from \"@serenity-is/extensions\";\r\nimport { LetterAttachmentDialog } from \"./LetterAttachmentDialog\";\r\n\r\n@Decorators.registerEditor('CorrespondenceSystem.LetterAttachmentDB.LetterAttachmentEditor')\r\nexport class LetterAttachmentEditor<P = {}> extends GridEditorBase<LetterAttachmentRow, P> {\r\n    protected getColumnsKey() { return LetterAttachmentColumns.columnsKey; }\r\n    protected getDialogType() { return LetterAttachmentDialog; }\r\n    protected getLocalTextPrefix() { return LetterAttachmentRow.localTextPrefix; }\r\n\r\n//    validateEntity(row, id) {\r\n//        row.ProductID = toId(row.ProductID);\r\n\r\n//        var sameProduct = this.view.getItems().find(x => x.ProductID === row.ProductID);\r\n//        if (sameProduct && this.id(sameProduct) !== id) {\r\n//            alertDialog('This product is already in order details!');\r\n//            return false;\r\n//        }\r\n\r\n//        id ??= row[this.getIdProperty()];\r\n\r\n//        ProductRow.getLookupAsync().then(lookup => {\r\n//            var item = this.view?.getItemById?.(id);\r\n//            if (item) {\r\n//                item.ProductName = lookup.itemById[row.ProductID].ProductName;\r\n//                this.view.updateItem(id, item);\r\n//            }\r\n//        });\r\n\r\n//        row.LineTotal = (row.Quantity || 0) * (row.UnitPrice || 0) - (row.Discount || 0);\r\n//        return true;\r\n//    }\r\n}", "\uFEFFimport { LetterAttachmentEditor } from \"@/LetterAttachmentDB/LetterAttachment/LetterAttachmentEditor\";\r\nimport { BooleanEditor, ServiceLookupEditor, StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface LetterForm {\r\n    UseDefaultTemplate: BooleanEditor;\r\n    SenderId: ServiceLookupEditor;\r\n    ReceiverId: ServiceLookupEditor;\r\n    GrandSubjectId: ServiceLookupEditor;\r\n    LetterIdentifier: StringEditor;\r\n    LetterNo: StringEditor;\r\n    Title: StringEditor;\r\n    LetterContent: StringEditor;\r\n    Tag: StringEditor;\r\n    HasAttachment: BooleanEditor;\r\n    LetterCarrier: StringEditor;\r\n    NeedAnswer: BooleanEditor;\r\n    LetterFile: StringEditor;\r\n    DetailList: LetterAttachmentEditor;\r\n}\r\n\r\nexport class LetterForm extends PrefixedContext {\r\n    static readonly formKey = 'LetterDB.Letter';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!LetterForm.init)  {\r\n            LetterForm.init = true;\r\n\r\n            var w0 = BooleanEditor;\r\n            var w1 = ServiceLookupEditor;\r\n            var w2 = StringEditor;\r\n            var w3 = LetterAttachmentEditor;\r\n\r\n            initFormType(LetterForm, [\r\n                'UseDefaultTemplate', w0,\r\n                'SenderId', w1,\r\n                'ReceiverId', w1,\r\n                'GrandSubjectId', w1,\r\n                'LetterIdentifier', w2,\r\n                'LetterNo', w2,\r\n                'Title', w2,\r\n                'LetterContent', w2,\r\n                'Tag', w2,\r\n                'HasAttachment', w0,\r\n                'LetterCarrier', w2,\r\n                'NeedAnswer', w0,\r\n                'LetterFile', w2,\r\n                'DetailList', w3\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { LetterAttachmentRow } from \"../LetterAttachmentDB/LetterAttachmentRow\";\r\n\r\nexport interface LetterRow {\r\n    Id?: string;\r\n    UseDefaultTemplate?: boolean;\r\n    TemplateId?: string;\r\n    SenderId?: string;\r\n    ReceiverId?: string;\r\n    GrandSubjectId?: string;\r\n    LetterIdentifier?: string;\r\n    LetterIdentifierGen?: string;\r\n    LetterNo?: string;\r\n    Title?: string;\r\n    LetterContent?: string;\r\n    Tag?: string;\r\n    LetterType?: number;\r\n    State?: number;\r\n    PriorityState?: number;\r\n    ConfidentialLevel?: number;\r\n    HasAttachment?: boolean;\r\n    CreatedDate?: string;\r\n    CreatorUserName?: string;\r\n    ModifiedDate?: string;\r\n    ModifiedUserName?: string;\r\n    TimeStamp?: number[];\r\n    LetterCarrier?: string;\r\n    NeedAnswer?: boolean;\r\n    LetterFile?: string;\r\n    TemplateTitle?: string;\r\n    SenderName?: string;\r\n    ReceiverName?: string;\r\n    GrandSubjectTitle?: string;\r\n    DetailList?: LetterAttachmentRow[];\r\n}\r\n\r\nexport abstract class LetterRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'LetterIdentifier';\r\n    static readonly localTextPrefix = 'LetterDB.Letter';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<LetterRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { LetterRow } from \"./LetterRow\";\r\n\r\nexport namespace LetterService {\r\n    export const baseUrl = 'LetterDB/Letter';\r\n\r\n    export declare function Create(request: SaveRequest<LetterRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<LetterRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<LetterRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<LetterRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"LetterDB/Letter/Create\",\r\n        Update: \"LetterDB/Letter/Update\",\r\n        Delete: \"LetterDB/Letter/Delete\",\r\n        Retrieve: \"LetterDB/Letter/Retrieve\",\r\n        List: \"LetterDB/Letter/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>LetterService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { LetterColumns, LetterRow, LetterService } from '@/ServerTypes/LetterDB';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { LetterDialog } from './LetterDialog';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.LetterDB.LetterGrid')\r\nexport class LetterGrid extends EntityGrid<LetterRow, any> {\r\n    protected getColumnsKey() { return LetterColumns.columnsKey; }\r\n    protected getDialogType() { return LetterDialog; }\r\n    protected getRowDefinition() { return LetterRow; }\r\n    protected getService() { return LetterService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n}", "\uFEFFimport { LetterForm, LetterRow, LetterService } from '@/ServerTypes/LetterDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('CorrespondenceSystem.LetterDB.LetterDialog')\r\nexport class LetterDialog extends EntityDialog<LetterRow, any> {\r\n    protected getFormKey() { return LetterForm.formKey; }\r\n    protected getRowDefinition() { return LetterRow; }\r\n    protected getService() { return LetterService.baseUrl; }\r\n\r\n    protected form = new LetterForm(this.idPrefix);\r\n}"],
  "mappings": "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",
  "names": ["import_corelib", "import_corelib", "_LetterColumns", "__name", "LetterColumns", "import_corelib", "import_extensions", "LetterAttachmentEditor", "LetterAttachmentColumns", "LetterAttachmentDialog", "LetterAttachmentRow", "__name", "__decorateClass", "import_corelib", "_LetterForm", "prefix", "w0", "w1", "w2", "w3", "LetterAttachmentEditor", "__name", "LetterForm", "import_corelib", "_LetterRow", "__name", "LetterRow", "import_corelib", "LetterService", "x", "r", "s", "o", "import_corelib", "import_corelib", "LetterDialog", "LetterForm", "LetterRow", "LetterService", "__name", "__decorateClass", "LetterGrid", "LetterColumns", "LetterDialog", "LetterRow", "LetterService", "container", "__name", "__decorateClass", "pageInit", "LetterGrid", "__name"]
}
